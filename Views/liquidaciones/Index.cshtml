@model IEnumerable<DataBase_RH_BanderaBlanca.Models.liquidaciones>

@{
    ViewBag.Title = "Index";
    DataBase_RH_BanderaBlanca.Models.Persona user = new DataBase_RH_BanderaBlanca.Models.Persona();
    user = (DataBase_RH_BanderaBlanca.Models.Persona)Session["user"];
}

<h2>Index</h2>

@Html.AntiForgeryToken()
@if (user.ObtenerIdsDeAccesos(user.listaAccesos).Contains(8)) // Solo muestra los botones si el idEstado es 3
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Preaviso)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DiasPreaviso)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.catalogo_tipo_liquidaciones.Tipo_Liquidaciones)
        </th>
        <th>
            Monto Total de Preaviso
        </th>
        <th>
            Monto Total de Cesantia
        </th>
        <th>
            Monto Total de Vacaciones
        </th>
        <th>
            Monto Total de Aguinaldo
        </th>
        <th>
            Monto Total de Liquidacion
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Fecha_Salida)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.estados_solicitudes.Estados_Solicitud)
        </th>
        <th>
            Acciones
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Preaviso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiasPreaviso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.catalogo_tipo_liquidaciones.Tipo_Liquidaciones)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.detalle_maestro_liquidaciones.Monto_Total_Preaviso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.detalle_maestro_liquidaciones.Monto_Total_Cesantia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.detalle_maestro_liquidaciones.Monto_Total_Vacaciones)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.detalle_maestro_liquidaciones.Monto_Total_Aguinaldo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.detalle_maestro_liquidaciones.Monto_Total_Liquidacion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha_Salida)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.estados_solicitudes.Estados_Solicitud)
            </td>
            <td>
                @if (item.estados_solicitudes.idEstados_Solicitudes == 3 && user.ObtenerIdsDeAccesos(user.listaAccesos).Contains(6)) // Solo muestra los botones si el idEstado es 3
                {
                    <!-- Botón para aprobar -->
                    using (Html.BeginForm("UpdateEstado", "Liquidaciones", FormMethod.Post))
                    {
                        @Html.Hidden("id", item.Fecha_Liquidacion) <!-- Id del registro de la liquidación -->
                        @Html.Hidden("estado", 1) <!-- Estado 1 para aprobado -->
                        <button type="submit" class="btn btn-success">Aprobar</button>
                    }

                    <!-- Botón para rechazar -->
                    using (Html.BeginForm("UpdateEstado", "Liquidaciones", FormMethod.Post))
                    {
                        @Html.Hidden("id", item.Fecha_Liquidacion)
                        @Html.Hidden("estado", 2) <!-- Estado 2 para rechazado -->
                        <button type="submit" class="btn btn-danger">Rechazar</button>
                    }
                }
                else
                {
                    <span class="text-muted">Acción no disponible</span>
                }
            </td>
        </tr>
    }
</table>
